//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Negocio.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFabricante", ReplyAction="http://tempuri.org/IService1/SelectFabricanteResponse")]
        Modelo.Fabricante[] SelectFabricante();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectFabricante", ReplyAction="http://tempuri.org/IService1/SelectFabricanteResponse")]
        System.Threading.Tasks.Task<Modelo.Fabricante[]> SelectFabricanteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertFabricante", ReplyAction="http://tempuri.org/IService1/InsertFabricanteResponse")]
        void InsertFabricante(Modelo.Fabricante f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertFabricante", ReplyAction="http://tempuri.org/IService1/InsertFabricanteResponse")]
        System.Threading.Tasks.Task InsertFabricanteAsync(Modelo.Fabricante f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateFabricante", ReplyAction="http://tempuri.org/IService1/UpdateFabricanteResponse")]
        void UpdateFabricante(Modelo.Fabricante f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateFabricante", ReplyAction="http://tempuri.org/IService1/UpdateFabricanteResponse")]
        System.Threading.Tasks.Task UpdateFabricanteAsync(Modelo.Fabricante f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFabricante", ReplyAction="http://tempuri.org/IService1/DeleteFabricanteResponse")]
        void DeleteFabricante(Modelo.Fabricante f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFabricante", ReplyAction="http://tempuri.org/IService1/DeleteFabricanteResponse")]
        System.Threading.Tasks.Task DeleteFabricanteAsync(Modelo.Fabricante f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectVeiculo", ReplyAction="http://tempuri.org/IService1/SelectVeiculoResponse")]
        Modelo.Veiculo[] SelectVeiculo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectVeiculo", ReplyAction="http://tempuri.org/IService1/SelectVeiculoResponse")]
        System.Threading.Tasks.Task<Modelo.Veiculo[]> SelectVeiculoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVeiculo", ReplyAction="http://tempuri.org/IService1/DeleteVeiculoResponse")]
        void DeleteVeiculo(Modelo.Veiculo v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteVeiculo", ReplyAction="http://tempuri.org/IService1/DeleteVeiculoResponse")]
        System.Threading.Tasks.Task DeleteVeiculoAsync(Modelo.Veiculo v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertVeiculo", ReplyAction="http://tempuri.org/IService1/InsertVeiculoResponse")]
        void InsertVeiculo(Modelo.Veiculo v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertVeiculo", ReplyAction="http://tempuri.org/IService1/InsertVeiculoResponse")]
        System.Threading.Tasks.Task InsertVeiculoAsync(Modelo.Veiculo v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateVeiculo", ReplyAction="http://tempuri.org/IService1/UpdateVeiculoResponse")]
        void UpdateVeiculo(Modelo.Veiculo v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateVeiculo", ReplyAction="http://tempuri.org/IService1/UpdateVeiculoResponse")]
        System.Threading.Tasks.Task UpdateVeiculoAsync(Modelo.Veiculo v);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Negocio.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Negocio.ServiceReference1.IService1>, Negocio.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Modelo.Fabricante[] SelectFabricante() {
            return base.Channel.SelectFabricante();
        }
        
        public System.Threading.Tasks.Task<Modelo.Fabricante[]> SelectFabricanteAsync() {
            return base.Channel.SelectFabricanteAsync();
        }
        
        public void InsertFabricante(Modelo.Fabricante f) {
            base.Channel.InsertFabricante(f);
        }
        
        public System.Threading.Tasks.Task InsertFabricanteAsync(Modelo.Fabricante f) {
            return base.Channel.InsertFabricanteAsync(f);
        }
        
        public void UpdateFabricante(Modelo.Fabricante f) {
            base.Channel.UpdateFabricante(f);
        }
        
        public System.Threading.Tasks.Task UpdateFabricanteAsync(Modelo.Fabricante f) {
            return base.Channel.UpdateFabricanteAsync(f);
        }
        
        public void DeleteFabricante(Modelo.Fabricante f) {
            base.Channel.DeleteFabricante(f);
        }
        
        public System.Threading.Tasks.Task DeleteFabricanteAsync(Modelo.Fabricante f) {
            return base.Channel.DeleteFabricanteAsync(f);
        }
        
        public Modelo.Veiculo[] SelectVeiculo() {
            return base.Channel.SelectVeiculo();
        }
        
        public System.Threading.Tasks.Task<Modelo.Veiculo[]> SelectVeiculoAsync() {
            return base.Channel.SelectVeiculoAsync();
        }
        
        public void DeleteVeiculo(Modelo.Veiculo v) {
            base.Channel.DeleteVeiculo(v);
        }
        
        public System.Threading.Tasks.Task DeleteVeiculoAsync(Modelo.Veiculo v) {
            return base.Channel.DeleteVeiculoAsync(v);
        }
        
        public void InsertVeiculo(Modelo.Veiculo v) {
            base.Channel.InsertVeiculo(v);
        }
        
        public System.Threading.Tasks.Task InsertVeiculoAsync(Modelo.Veiculo v) {
            return base.Channel.InsertVeiculoAsync(v);
        }
        
        public void UpdateVeiculo(Modelo.Veiculo v) {
            base.Channel.UpdateVeiculo(v);
        }
        
        public System.Threading.Tasks.Task UpdateVeiculoAsync(Modelo.Veiculo v) {
            return base.Channel.UpdateVeiculoAsync(v);
        }
    }
}
