#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Serviço.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="20131011110029")]
	public partial class AcademiaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMatricula(Matricula instance);
    partial void UpdateMatricula(Matricula instance);
    partial void DeleteMatricula(Matricula instance);
    partial void InsertParcela(Parcela instance);
    partial void UpdateParcela(Parcela instance);
    partial void DeleteParcela(Parcela instance);
    #endregion
		
		public AcademiaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["_20131011110029ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Matricula> Matriculas
		{
			get
			{
				return this.GetTable<Matricula>();
			}
		}
		
		public System.Data.Linq.Table<Parcela> Parcelas
		{
			get
			{
				return this.GetTable<Parcela>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Matricula")]
	public partial class Matricula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Aluno;
		
		private string _Pacote;
		
		private System.Nullable<System.DateTime> _Data;
		
		private EntitySet<Parcela> _Parcelas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAlunoChanging(string value);
    partial void OnAlunoChanged();
    partial void OnPacoteChanging(string value);
    partial void OnPacoteChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    #endregion
		
		public Matricula()
		{
			this._Parcelas = new EntitySet<Parcela>(new Action<Parcela>(this.attach_Parcelas), new Action<Parcela>(this.detach_Parcelas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aluno", DbType="VarChar(50)")]
		public string Aluno
		{
			get
			{
				return this._Aluno;
			}
			set
			{
				if ((this._Aluno != value))
				{
					this.OnAlunoChanging(value);
					this.SendPropertyChanging();
					this._Aluno = value;
					this.SendPropertyChanged("Aluno");
					this.OnAlunoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pacote", DbType="VarChar(50)")]
		public string Pacote
		{
			get
			{
				return this._Pacote;
			}
			set
			{
				if ((this._Pacote != value))
				{
					this.OnPacoteChanging(value);
					this.SendPropertyChanging();
					this._Pacote = value;
					this.SendPropertyChanged("Pacote");
					this.OnPacoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matricula_Parcela", Storage="_Parcelas", ThisKey="Id", OtherKey="IdMatricula")]
		internal EntitySet<Parcela> Parcelas
		{
			get
			{
				return this._Parcelas;
			}
			set
			{
				this._Parcelas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.Matricula = this;
		}
		
		private void detach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.Matricula = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parcela")]
	public partial class Parcela : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _IdMatricula;
		
		private System.Nullable<System.DateTime> _Data;
		
		private System.Nullable<decimal> _Valor;
		
		private System.Nullable<decimal> _Pago;
		
		private EntityRef<Matricula> _Matricula;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdMatriculaChanging(System.Nullable<int> value);
    partial void OnIdMatriculaChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnValorChanging(System.Nullable<decimal> value);
    partial void OnValorChanged();
    partial void OnPagoChanging(System.Nullable<decimal> value);
    partial void OnPagoChanged();
    #endregion
		
		public Parcela()
		{
			this._Matricula = default(EntityRef<Matricula>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMatricula", DbType="Int")]
		public System.Nullable<int> IdMatricula
		{
			get
			{
				return this._IdMatricula;
			}
			set
			{
				if ((this._IdMatricula != value))
				{
					if (this._Matricula.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMatriculaChanging(value);
					this.SendPropertyChanging();
					this._IdMatricula = value;
					this.SendPropertyChanged("IdMatricula");
					this.OnIdMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Money")]
		public System.Nullable<decimal> Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pago", DbType="Money")]
		public System.Nullable<decimal> Pago
		{
			get
			{
				return this._Pago;
			}
			set
			{
				if ((this._Pago != value))
				{
					this.OnPagoChanging(value);
					this.SendPropertyChanging();
					this._Pago = value;
					this.SendPropertyChanged("Pago");
					this.OnPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Matricula_Parcela", Storage="_Matricula", ThisKey="IdMatricula", OtherKey="Id", IsForeignKey=true)]
		internal Matricula Matricula
		{
			get
			{
				return this._Matricula.Entity;
			}
			set
			{
				Matricula previousValue = this._Matricula.Entity;
				if (((previousValue != value) 
							|| (this._Matricula.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Matricula.Entity = null;
						previousValue.Parcelas.Remove(this);
					}
					this._Matricula.Entity = value;
					if ((value != null))
					{
						value.Parcelas.Add(this);
						this._IdMatricula = value.Id;
					}
					else
					{
						this._IdMatricula = default(Nullable<int>);
					}
					this.SendPropertyChanged("Matricula");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
